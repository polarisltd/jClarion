package org.jclarion.clarion.util;

import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JPanel;
import org.apache.pdfbox.pdfviewer.PDFPagePanel;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination;



public class PDFPreviewer {
    String path;
    byte[] buf;
    public static void main(String[] args) throws IOException{
        // Get a file from the command line to open
        System.out.println(args.length);
        new PDFPreviewer(args[0]).run();

    }

public PDFPreviewer(String path){ 
    this.path = path;
}
public PDFPreviewer(byte[] buf){ 
    this.buf = buf;
}

    
public void run() throws IOException{    

final PDDocument inputPDF=loadDoc();	
	

// possible to load also from bytearray without storing on disk.
// load(byte[]Â input)Parses a PDF.


List<PDPage> allPages = inputPDF.getDocumentCatalog().getAllPages();
PDPage testPage = (PDPage)allPages.get(0);

PDPageFitWidthDestination dest = new PDPageFitWidthDestination();
dest.setPage( testPage );




// From here I would like to create a PDFPagePanel and use its setPage() method to place the PDPage into the component. From here I want to add the component to a JFrame. When I do this I just see whitespace.

JFrame testFrame = new JFrame();
//testFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

testFrame.addWindowListener(new java.awt.event.WindowAdapter() {
    @Override
    public void windowClosing(java.awt.event.WindowEvent windowEvent) {
        try{
         System.out.println("closing pdf");   
         inputPDF.close(); 
         // System.exit(0);  we shouldnt close app!
        }catch(Exception ioe){}
    }
});



PDFPagePanel pdfPanel = new PDFPagePanel();
pdfPanel.setPage(testPage);
testFrame.add(pdfPanel);
testFrame.setBounds(40, 40, pdfPanel.getWidth(), pdfPanel.getHeight());
testFrame.setVisible(true);    
}    

PDDocument loadDoc() throws IOException{
   if(path!=null){	
	  File pdfPath = new File(path);
	  return PDDocument.load(pdfPath);
	}else if(buf!=null){
	  InputStream is = new ByteArrayInputStream(buf);
	  return PDDocument.load(is,true);
	}else
       return null;
}



    
}
