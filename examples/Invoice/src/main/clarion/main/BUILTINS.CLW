! BUILTINS.CLW
! CW Runtime Library map definitions
! Automatically included by compiler
! Needs equates included first with unsigned & signed definitions

  MODULE('C60RUN%X%')
! New overloaded functions
      BUILD(FILE),NAME('Cla$FILE_BUILDf')
      BUILD(KEY),NAME('Cla$FILE_BUILDk')
      BUILD(KEY,<STRING>,STRING),NAME('Cla$FILE_BUILDksf')
      BUILD(KEY,STRING),NAME('Cla$FILE_BUILDks')
      CLOSE(FILE),NAME('Cla$FILE_CLOSE')
      CLOSE(WINDOW),NAME('Cla$CLOSEwindow')
      DELETE(FILE),NAME('Cla$FILE_DELETE')
      DELETE(QUEUE),NAME('Cla$DELETEqueue')
      DUPLICATE(FILE),LONG,NAME('Cla$FILE_DUPLICATEf')
      DUPLICATE(KEY),LONG,NAME('Cla$FILE_DUPLICATEk')
      FREESTATE(FILE,LONG),NAME('Cla$FILE_FREESTATE')
      GETNULLS(FILE),STRING,NAME('Cla$FILE_GETNULLS')
      GETSTATE(FILE,BYTE=FALSE),LONG,NAME('Cla$FILE_GETSTATE')
      HOLD(FILE),NAME('Cla$FILE_HOLDf')
      HOLD(FILE,SIGNED),NAME('Cla$FILE_HOLDfi')
      LOCK(FILE),NAME('Cla$FILE_LOCKf')
      LOCK(FILE,SIGNED),NAME('Cla$FILE_LOCKfi')
      OPEN(FILE,UNSIGNED = 022H),NAME('Cla$FILE_OPEN')
      OPEN(WINDOW),NAME('Cla$OPENwindow')
      OPEN(WINDOW,WINDOW),NAME('Cla$OPENowned')
      POINTER(FILE),LONG,NAME('Cla$FILE_POINTERf')
      POINTER(KEY),LONG,NAME('Cla$FILE_POINTERk')
      POINTER(QUEUE),LONG,NAME('Cla$POINTERqueue')
      POSITION(FILE),STRING,NAME('Cla$FILE_POSITIONf')
      POSITION(KEY),STRING,NAME('Cla$FILE_POSITIONk')
      POSITION(QUEUE),LONG,NAME('Cla$POSITIONqueue')
      RECORDS(FILE),LONG,NAME('Cla$FILE_RECORDSf')
      RECORDS(KEY),LONG,NAME('Cla$FILE_RECORDSk')
      RECORDS(QUEUE),LONG,NAME('Cla$RECORDSqueue')
      REGET(FILE,STRING),NAME('Cla$FILE_REGETf')
      REGET(KEY,STRING),NAME('Cla$FILE_REGETk')
      RESET(FILE,STRING),NAME('Cla$FILE_RESETf')
      RESET(KEY,STRING),NAME('Cla$FILE_RESETk')
      SET(FILE),NAME('Cla$FILE_SETf')
      SET(FILE,KEY),NAME('Cla$FILE_SETfk')
      SET(FILE,LONG),NAME('Cla$FILE_SETfl')
      SET(VIEW,LONG = 0),NAME('Cla$VIEW_SETvl')
      RESET(VIEW,FILE),NAME('Cla$VIEW_RESETvf')
      RESTORESTATE(FILE,LONG,BYTE=0),NAME('Cla$FILE_RESTORESTATE')
      SET(KEY),NAME('Cla$FILE_SETk')
      SET(KEY,KEY),NAME('Cla$FILE_SETkk')
      SET(KEY,KEY,LONG),NAME('Cla$FILE_SETkkl')
      SET(KEY,LONG),NAME('Cla$FILE_SETkl')
      SETNULLS(FILE,STRING),NAME('Cla$FILE_SETNULLS')
      STATUS(FILE),LONG,NAME('Cla$STATUSfile')
      UNBIND(STRING),NAME('Cla$UnbindV')
      UNBIND,NAME('Cla$UnbindA')

      _PROC(),TYPE
      _PROC1(STRING),TYPE
      _PROC2(STRING,STRING),TYPE
      _PROC3(STRING,STRING,STRING),TYPE

      ACCEPTED(),SIGNED,NAME('Cla$ACCEPTED')
      ACOS(REAL),REAL,NAME('Cla$ACOS')
      ALERT(SIGNED=0, SIGNED=0),NAME('Cla$ALERT')
      ALIAS(UNSIGNED=0,UNSIGNED=0),NAME('Cla$ALIAS')
      ALL(STRING,UNSIGNED=255),STRING,NAME('Cla$StackALL')
      ARC(SIGNED,SIGNED,SIGNED,SIGNED,SIGNED,SIGNED,<STRING>),NAME('Cla$ARC')
      ASIN(REAL),REAL,NAME('Cla$ASIN')
      ASK(),NAME('Cla$ASK')
      ATAN(REAL),REAL,NAME('Cla$ATAN')
      BEEP(UNSIGNED=150, UNSIGNED=16),NAME('Cla$BEEP')
      BINDEXPRESSION (STRING name, STRING exp),NAME('Cla$BindE')
      BLANK(<SIGNED>,<SIGNED>,<SIGNED>,<SIGNED>),NAME('Cla$BLANK')
      BOF(FILE),LONG,NAME('Cla$FILE_BOF')
      BOX(SIGNED,SIGNED,SIGNED,SIGNED,LONG=COLOR:None,<STRING>),NAME('Cla$BOX')
      BUFFER(FILE,UNSIGNED pageSize, UNSIGNED behind=0, UNSIGNED ahead=0, UNSIGNED timeout=0),NAME('Cla$FILE_BUFFER')
      BYTES(FILE),LONG,NAME('Cla$FILE_BYTES')
      CALL(STRING,STRING,<UNSIGNED>),SIGNED,PROC,NAME('Cla$CALL')
      CENTER(STRING,UNSIGNED=-1),STRING,NAME('Cla$StackCENTER')
      CHAIN(STRING),NAME('Cla$CHAIN')
      CHANGE(SIGNED,STRING),NAME('Cla$CHANGE')
      CHANGES(QUEUE),LONG,NAME('Cla$NUMCHANGESqueue')
      CHOICE(SIGNED=0),SIGNED,NAME('Cla$CHOICE')
      CHORD(SIGNED,SIGNED,SIGNED,SIGNED,SIGNED,SIGNED,LONG=COLOR:None,<STRING>),NAME('Cla$CHORD')
      CLIP(STRING),STRING,NAME('Cla$StackCLIP')
      CLIPBOARD(SIGNED = 0),STRING,NAME('Cla$CLIPBOARD')
      CLOCK(),LONG,NAME('Cla$CLOCK')
      CLONE(SIGNED feq, SIGNED fromfeq, SIGNED parentfeq=0, SIGNED position=-1, <WINDOW>),SIGNED,PROC,NAME('Cla$CLONE')
      COLORDIALOG(<STRING>,*?,SIGNED=0),SIGNED,PROC,NAME('Cla$ColorDialog')
      COMMAND(<STRING>),STRING,PROC,NAME('Cla$COMMAND')
      COMMIT(),NAME('Cla$COMMIT')
      CONVERTANSITOOEM(*?, SIGNED=0),NAME('Cla$ConvertAnsiToOem')
      CONVERTOEMTOANSI(*?, SIGNED=0),NAME('Cla$ConvertOemToAnsi')
      CONTENTS(SIGNED),STRING,NAME('Cla$StackCONTENTS')
      COPY(FILE,STRING),NAME('Cla$FILE_COPY')
      COPY(STRING,STRING),NAME('Cla$CopyFile')
      COS(REAL),REAL,NAME('Cla$COS')
      DATE(UNSIGNED,UNSIGNED,UNSIGNED),LONG,NAME('Cla$DATE')
      DAY(LONG),LONG,NAME('Cla$DAY')
      DELETEREG(LONG,STRING,<STRING>),NAME('Cla$DELETEREG')
      DIRECTORY(ff_:queue result,STRING path,BYTE attrib),NAME('Cla$DIRECTORY')
      DIRECTORY(FILE:Queue FileEntries, STRING Path, BYTE Attributes),NAME('Cla$LFNDIRECTORY')
      DESTROY(SIGNED=0,SIGNED=0),NAME('Cla$DESTROY')
      DISABLE(SIGNED=0,SIGNED=0),NAME('Cla$DISABLE')
      DISPLAY(SIGNED=0,SIGNED=0),NAME('Cla$DISPLAY')
      DRAGID(<*?>,<*?>),STRING,NAME('Cla$DRAGID')
      DROPID(<*?>,<*?>),STRING,NAME('Cla$DROPID')
      ELLIPSE(SIGNED,SIGNED,SIGNED,SIGNED,LONG=COLOR:None,<STRING>),NAME('Cla$ELLIPSE')
      EMPTY(FILE),NAME('Cla$FILE_EMPTY')
      ENABLE(SIGNED=0,SIGNED=0),NAME('Cla$ENABLE')
      ENDPAGE(WINDOW, SIGNED=0),NAME('Cla$ENDPAGE')
      EOF(FILE),LONG,NAME('Cla$FILE_CEOF')
      ERASE(SIGNED=0,SIGNED=0),NAME('Cla$ERASE')
      ERROR(),STRING,NAME('Cla$StackErrstr')
      ERRORCODE(),SIGNED,NAME('Cla$ERRORCODE')
      ERRORFILE(),STRING,NAME('Cla$ERRORFILE')
      EVALUATE(STRING),STRING,NAME('Cla$Evaluate')
      EVENT(),SIGNED,NAME('Cla$EVENT')
      EXISTS(STRING),LONG,NAME('Cla$FileExists')
      FIELD(),SIGNED,NAME('Cla$FIELD')
      FILEDIALOG(<STRING>,*?,<STRING>,SIGNED=0),PROC,BOOL,NAME('Cla$FileDialog')
      FILEDIALOGA(<STRING>,*?,<STRING>,SIGNED=0,<*SIGNED>),PROC,BOOL,NAME('Cla$FileDialogA')
      FILEERROR(),STRING,NAME('Cla$FILEERRORMSG')
      FILEERRORCODE(),STRING,NAME('Cla$FILEERRORCODE')
      FIRSTFIELD(),SIGNED,NAME('Cla$FIRSTFIELD')
      FLUSH(FILE),NAME('Cla$FILE_FLUSH')
      FOCUS(),SIGNED,NAME('Cla$FOCUS')
      FONTDIALOG(<STRING>,*?,<*?>,<*?>,<*?>,SIGNED = 0),BOOL,PROC,NAME('Cla$FontDialog')
      FONTDIALOGA(<STRING>,*?,<*?>,<*?>,<*?>,<*?>,SIGNED = 0),BOOL,PROC,NAME('Cla$FontDialogA')
      FORWARDKEY(SIGNED),NAME('Cla$FORWARDKEY')
      FREE(QUEUE),NAME('Cla$FREEqueuea')
      GETFONT(SIGNED,<*?>,<*?>, <*?>, <*?>),NAME('Cla$GETFONT')
      GETFONT(SIGNED,<*?>,<*?>, <*?>, <*?>, *?),NAME('Cla$GETFONTEX')
      GETREG(LONG,STRING,<STRING>,<*?>),STRING,NAME('Cla$GETREG')
      GETINI(STRING,STRING,<STRING>,<STRING>),STRING,NAME('Cla$GETINI')
      GETPOSITION(SIGNED,<*?>,<*?>,<*?>,<*?>),NAME('Cla$GETPOSITION')
      HALT(UNSIGNED=0,<STRING>),NAME('Cla$HALT')
      HELP(<STRING>,<STRING>),NAME('Cla$HELP')
      HIDE(SIGNED=0,SIGNED=0),NAME('Cla$HIDE')
      IDLE(<_PROC>,UNSIGNED = 1),NAME('Cla$IDLE')
      IMAGE(SIGNED,SIGNED,SIGNED=0,SIGNED=0,STRING,<STRING>),NAME('Cla$IMAGE')
      INCOMPLETE(),SIGNED,NAME('Cla$INCOMPLETE')
      INSTANCE(*?,SIGNED),LONG,RAW,NAME('Cla$INSTANCE')
      INSTANCE(FILE,SIGNED),LONG,NAME('Cla$INSTANCE')
      INSTANCE(KEY,SIGNED),LONG,NAME('Cla$INSTANCE')
      INSTANCE(QUEUE,SIGNED),LONG,NAME('Cla$INSTANCE')
      INSTRING(STRING,STRING,UNSIGNED=0,UNSIGNED=1),UNSIGNED,NAME('Cla$StackINSTRING')
      ISALPHA(STRING),SHORT,NAME('Cla$IsAlpha')
      ISLOWER(STRING),SHORT,NAME('Cla$IsLower')
      ISUPPER(STRING),SHORT,NAME('Cla$IsUpper')
      ISSTRING(?),SIGNED,NAME('Cla$IsUfoString')
      KEYBOARD(),UNSIGNED,NAME('Cla$KEYBOARD')
      KEYCHAR(),UNSIGNED, NAME('Cla$KEYCHAR')
      KEYCODE(),UNSIGNED,NAME('Cla$KEYCODE')
      KEYSTATE(),UNSIGNED,NAME('Cla$KEYSTATE')
      LASTFIELD(),SIGNED,NAME('Cla$LASTFIELD')
      LEFT(STRING,UNSIGNED=-1),STRING,NAME('Cla$StackLEFT')
      LEN(STRING),UNSIGNED,NAME('Cla$StackLen')
      LINE(SIGNED,SIGNED,SIGNED,SIGNED,<STRING>),NAME('Cla$LINE')
      LOCALE(STRING,<STRING>),NAME('Cla$Locale')
      LOCKTHREAD(),NAME('Cla$LOCKTHREAD')
      LOG10(REAL),REAL,NAME('Cla$LOG10')
      LOGE(REAL),REAL,NAME('Cla$LOGE')
      LONGPATH(<STRING>),STRING,NAME('Cla$LONGPATH')
      LOWER(STRING),STRING,NAME('Cla$StackLOWER')
      MATCH(STRING s,STRING p,BYTE flags=Match:Wild),LONG,NAME('Cla$MATCH')
      MESSAGE(STRING,<STRING>,<STRING>,<STRING>,UNSIGNED=0,UNSIGNED=0),UNSIGNED,PROC,NAME('Cla$MessageBox')
      MONTH(LONG),LONG,NAME('Cla$MONTH')
      MOUSEX(),SIGNED,NAME('Cla$MOUSEX')
      MOUSEY(),SIGNED,NAME('Cla$MOUSEY')
      NAME(FILE),STRING,NAME('Cla$FILE_NAME')
      NEXT(FILE),NAME('Cla$FILE_NEXT')
      NOMEMO(FILE),NAME('Cla$FILE_NOMEMO')
      NOTIFICATION(*UNSIGNED,<*SIGNED>,<*LONG>),BOOL,PROC,NAME('Cla$NOTIFICATION')
      NOTIFY(UNSIGNED,SIGNED=0,LONG=0),NAME('Cla$NOTIFY')
      NUMERIC(STRING),UNSIGNED,NAME('Cla$StackNUMERIC')
      PACK(FILE),NAME('Cla$FILE_PACK')
      PATH(<STRING>),STRING,NAME('Cla$SHORTPATH')
      PENCOLOR(),LONG,NAME('Cla$PENCOLOR')
      PENWIDTH(),SIGNED,NAME('Cla$PENWIDTH')
      PENSTYLE(),SIGNED,NAME('Cla$PENSTYLE')
      PIE(SIGNED,SIGNED,SIGNED,SIGNED,*SIGNED[],*LONG[],SIGNED=0,UNSIGNED=0,SIGNED=0,<STRING>),NAME('Cla$PIE')
      POLYGON(*SIGNED[],LONG=COLOR:None,<STRING>),NAME('Cla$POLYGON')
      POPBIND(),NAME('Cla$PopBind')
      POPERRORS(),NAME('Cla$poperrcodes')
      POPUP(STRING,SIGNED=_nopos,SIGNED=_nopos),SIGNED,NAME('Cla$POPUP')
      POST(UNSIGNED,SIGNED=0,SIGNED=0,SIGNED=0),NAME('Cla$POST')
      PRESSKEY(UNSIGNED),NAME('Cla$PRESSKEY')
      PREVIOUS(FILE),NAME('Cla$FILE_PREV')
      PRINTERDIALOG(<STRING>,BOOL=FALSE),BOOL,PROC,NAME('Cla$PrinterDialog')
      PUSHBIND(SIGNED=0),NAME('Cla$PushBind')
      PUSHERRORS(),NAME('Cla$pusherrcodes')
      PUTREG(LONG,STRING,STRING,<STRING>,LONG=REG_SZ),LONG,PROC,NAME('Cla$PUTREG')
      PUTINI(STRING,<STRING>,<STRING>,<STRING>),NAME('Cla$PUTINI')
      QUOTE(STRING,UNSIGNED=0),STRING,NAME('Cla$QUOTE')
      RANDOM(LONG,LONG),LONG,NAME('Cla$RANDOM')
      REGISTER(SIGNED, LONG, LONG, <WINDOW>, <SIGNED>),NAME('Cla$REGISTEREVENT')
      REGISTEREVENT(SIGNED, LONG, LONG, <WINDOW>, <SIGNED>),NAME('Cla$REGISTEREVENT')
      RELEASE(FILE),NAME('Cla$FILE_RELEASE')
      REMOVE(FILE),NAME('Cla$FILE_REMOVE')
      REMOVE(STRING),NAME('Cla$RemoveFile')
      RENAME(FILE,STRING),NAME('Cla$FILE_RENAME')
      RENAME(STRING,STRING),NAME('Cla$RenameFile')
      RESUME(SIGNED),NAME('Cla$RESUME')
      RIGHT(STRING,UNSIGNED=-1),STRING,NAME('Cla$StackRIGHT')
      ROLLBACK(),NAME('Cla$ROLLBACK')
      ROUNDBOX(SIGNED,SIGNED,SIGNED,SIGNED,LONG=COLOR:None,<STRING>),NAME('Cla$ROUNDBOX')
      RUN(STRING,SIGNED=0,SIGNED=0),NAME('Cla$RUN')
      RUNCODE(),LONG,NAME('Cla$RUNCODE')
      REJECTCODE(),SIGNED,NAME('Cla$REJECTCODE')
      SELECT(SIGNED=0,SIGNED=0,SIGNED=0),NAME('Cla$SELECT')
      SELECTED(),SIGNED,NAME('Cla$SELECTED')
      SEND(FILE,STRING),STRING,PROC,NAME('Cla$FILE_SEND')
      SET3DLOOK(UNSIGNED),NAME('Cla$SET3DLOOK')
      SETCLIPBOARD(STRING),NAME('Cla$SETCLIPBOARD')
      SETCLOCK(LONG),NAME('Cla$SETCLOCK')
      SETCOMMAND(STRING),NAME('Cla$SETCOMMAND')
      SETCURSOR(<STRING>),NAME('Cla$SETCURSOR')
      SETDROPID(STRING),NAME('Cla$SETDROPID')
      SETFONT(SIGNED,<STRING>,SIGNED=0,LONG=COLOR:None,UNSIGNED=-1),NAME('Cla$SETFONT')
      SETFONT(SIGNED,<STRING>,SIGNED=0,LONG=COLOR:None,UNSIGNED=-1,BYTE),NAME('Cla$SETFONTEX')
      SETKEYCHAR(UNSIGNED),NAME('Cla$SETKEYCHAR')
      SETKEYCODE(UNSIGNED),NAME('Cla$SETKEYCODE')
      SETPATH(STRING),NAME('Cla$SETPATH')
      SETPENWIDTH(SIGNED=0),NAME('Cla$SETPENWIDTH')
      SETPENSTYLE(SIGNED=PEN:Solid),NAME('Cla$SETPENSTYLE')
      SETPENCOLOR(LONG=COLOR:WindowText),NAME('Cla$SETPENCOLOR')
      SETPOSITION(SIGNED,SIGNED=_nopos,SIGNED=_nopos,SIGNED=_nopos,SIGNED=_nopos),NAME('Cla$SETPOSITION')
      SETTARGET(<WINDOW>,UNSIGNED=0),NAME('Cla$SETTARGET')
      SETTODAY(LONG),NAME('Cla$SETTODAY')
      SHARE(FILE,SIGNED=42H),NAME('Cla$FILE_SHARE')
      SHORTPATH(<STRING>),STRING,NAME('Cla$SHORTPATH')
      SHOW(SIGNED,SIGNED,STRING,<STRING>),NAME('Cla$SHOW')
      SHUTDOWN(<_PROC>),NAME('Cla$SHUTDOWN')
      SIN(REAL),REAL,NAME('Cla$SIN')
      SKIP(FILE,LONG),NAME('Cla$FILE_SKIP')
      SQRT(REAL),REAL,NAME('Cla$SQRT')
      START(_PROC,UNSIGNED=0),SIGNED,PROC,NAME('Cla$START')
      START(_PROC1,UNSIGNED=0,STRING),SIGNED,PROC,NAME('Cla$START1')
      START(_PROC2,UNSIGNED=0,STRING,STRING),SIGNED,PROC,NAME('Cla$START2')
      START(_PROC3,UNSIGNED=0,STRING,STRING,STRING),SIGNED,PROC,NAME('Cla$START3')
      STATUS(WINDOW),LONG,NAME('Cla$STATUSwindow')
      STOP(<STRING>),NAME('Cla$STOP')
      STREAM(FILE),NAME('Cla$FILE_STREAM')
      STRPOS(STRING s,STRING p,BYTE nocase=FALSE),LONG,NAME('Cla$REGULAR')
      SUB(STRING,UNSIGNED,UNSIGNED),STRING,NAME('Cla$StackSUB')
      SUSPEND(SIGNED,SIGNED=1),SIGNED,PROC,NAME('Cla$SUSPEND')
      TAN(REAL),REAL,NAME('Cla$TAN')
      THREAD(),SIGNED, NAME('Cla$THREAD')
      THREADLOCKED(),SIGNED,NAME('Cla$THREADLOCKED')
      TIE(ASTRING,LONG=0,LONG),LONG,PROC,NAME('Cla$TIE')
      TIED(ASTRING,LONG),LONG,NAME('Cla$TIED')
      TODAY(),LONG,NAME('Cla$TODAY')
      TYPE(STRING),NAME('Cla$StackTYPE')
      UNHIDE(SIGNED=0,SIGNED=0),NAME('Cla$UNHIDE')
      UNLOAD(STRING),NAME('Cla$UNLOAD')
      UNLOCK(FILE),NAME('Cla$FILE_UNLOCK')
      UNLOCKTHREAD(),NAME('Cla$UNLOCKTHREAD')
      UNQUOTE(STRING),STRING,NAME('Cla$UNQUOTE')
      UNREGISTER(SIGNED=0, LONG=0, <LONG>, <WINDOW>, <SIGNED>),NAME('Cla$UNREGISTEREVENT')
      UNREGISTEREVENT(SIGNED=0, LONG=0, <LONG>, <WINDOW>, <SIGNED>),NAME('Cla$UNREGISTEREVENT')
      UNTIE(<ASTRING>,LONG=-1),NAME('Cla$UNTIE')
      UPDATE(SIGNED=0,SIGNED=0),NAME('Cla$UPDATE')
      UPPER(STRING),STRING,NAME('Cla$StackUPPER')
      WATCH(FILE),NAME('Cla$FILE_WATCH')
      WHAT(*GROUP,SIGNED),*?,NAME('Cla$WHAT')
      WHAT(QUEUE,SIGNED),*?,NAME('Cla$WHATqueue')
      WHERE(*GROUP,*?),SIGNED,NAME('Cla$WHERE')
      WHERE(QUEUE,*?),SIGNED,NAME('Cla$WHEREqueue')
      WHO(*GROUP,SIGNED),STRING,NAME('Cla$WHO')
      WHO(QUEUE,SIGNED),STRING,NAME('Cla$WHOqueue')
      YEAR(LONG),LONG,NAME('Cla$YEAR')
      YIELD(),NAME('Cla$YIELD')
  END

