#CONTROL(BrowseFuzzyMatching, 'Browse Fuzzy Matching'),REQ(BrowseBox)
#!
#RESTRICT
  #IF(%FuzzyMatchingEnabled = %False)
    #REJECT
  #ENDIF
#ENDRESTRICT
#!
#PREPARE
  #CALL(%ReadABCFiles)
  #CALL(%BuildControlEvents)
#ENDPREPARE
#!
#!
  CONTROLS
    GROUP('Fu&zzy Search Options'),USE(?FuzzyGroup),AT(,,199,24),BOXED
      ENTRY(@S255),AT(4,10,100,10),USE(?FuzzyQuery),#REQ
      BUTTON('&Search'),AT(104,-1,42,12),USE(?FuzzyGo),#REQ
      BUTTON('&Clear'),AT(44,0,42,12),USE(?FuzzyClear),#REQ
    END
#!
#BOXED(''),AT(0,0),WHERE(%False),HIDE
  #PROMPT('',@S64),%AvailableControlEvents,MULTI(''),UNIQUE
#ENDBOXED
#PROMPT('Display Match Results in Browse Listbox', CHECK),%DisplayResults,AT(10),DEFAULT(%False)
#ENABLE(%DisplayResults = %True)
  #PROMPT('Display &Where:', DROP('First Column|Last Column')),%DisplayWhere,DEFAULT('First Column')
  #PROMPT('&Column Format:', @S255),%ColumnFormat,DEFAULT('48C(2)|M~Match Result~L(1)@n_3@')
#ENDENABLE
#PROMPT('Minimum &Score Filter Value:', @S255),%MinimumScoreFilterValue
#PROMPT('Reset Fuzzy Match Result Order on Control Event?', CHECK),%TerminateOnControlEvent,DEFAULT(%False),AT(10)
#ENABLE(%TerminateOnControlEvent = %True)
  #PROMPT('&Control:', FROM(%Control, %Control <> '' AND %ControlType <> 'PROMPT')),%TerminateControl,REQ,WHENACCEPTED(%BuildControlEvents())
  #PROMPT('&Event:', FROM(%AvailableControlEvents)),%TerminateEvent,REQ
#ENDENABLE
#ENABLE(%FindLocalTemplateInstance('WindowResize(ABC)') <> 0)
  #BOXED('Fuzzy Group Resize Options')
    #PROMPT('&Reposition Strategy:', @S255),%FuzzyGroupRepositionStrategy,DEFAULT('Resize:FixNearestX + Resize:FixNearestY')
    #PROMPT('Resi&ze Strategy:',@S255),%FuzzyGroupResizeStrategy,DEFAULT('Resize:LockSize')
  #ENDBOXED
#ENDENABLE
#!
#!
#ATSTART
  #CALL(%ReadABCFiles)
  #EQUATE(%BrowseObjectName, %GetObjectName('Default', %ActiveTemplateParentInstance))
  #EQUATE(%SOVar, 'FuzzyOrder' & %ActiveTemplateInstance)
  #EQUATE(%ResultVar, 'FuzzyResult' & %ActiveTemplateInstance)
  #ASSERT(%BrowseObjectName <> '', 'FuzzyControl: Unable to get object name for parent browse!')
  #DECLARE(%FuzzyEntryField)
  #DECLARE(%FuzzyGoButton)
  #DECLARE(%FuzzyClearButton)
  #DECLARE(%FuzzyGroup)
  #FOR(%Control),WHERE(%ControlInstance = %ActiveTemplateInstance)
    #IF(%ControlOriginal = '?FuzzyQuery')
      #SET(%FuzzyEntryField, %Control)
    #ELSIF(%ControlOriginal = '?FuzzyGo')
      #SET(%FuzzyGoButton, %Control)
    #ELSIF(%ControlOriginal = '?FuzzyClear')
      #SET(%FuzzyClearButton, %Control)
    #ELSIF(%ControlOriginal = '?FuzzyGroup')
      #SET(%FuzzyGroup, %Control)
    #ENDIF
  #ENDFOR
  #ASSERT(%FuzzyEntryField <> '', 'Fuzzy Control: Unable to find Entry Field!')
  #ASSERT(%FuzzyGoButton <> '', 'Fuzzy Control: Unable to find Go button!')
  #ASSERT(%FuzzyClearButton <> '', 'Fuzzy Control: Unable to find Clear button!')
  #ASSERT(%FuzzyGroup <> '', 'Fuzyy Control: Unable to find Group!')
  #EQUATE(%ResizerInstance, %FindLocalTemplateInstance('WindowResize(ABC)'))
#ENDAT
#!
#!
#AT(%DataSectionAfterWindow)
  #CALL(%MakeDeclr, 22, %OOPConstruct, %SOVar, 'BYTE,AUTO')
%OOPConstruct
  #CALL(%MakeDeclr, 22, %OOPConstruct, 'FuzzyQuery' & %ActiveTemplateInstance, 'STRING(255)')
%OOPConstruct
  #IF(%DisplayResults = %True)
    #CALL(%MakeDeclr, 22, %OOPConstruct, %ResultVar, 'LONG,AUTO')
%OOPConstruct
  #ENDIF
#ENDAT
#!
#!
#AT(%ControlEventHandling, %FuzzyGoButton, 'Accepted'),PRIORITY(6000)
%BrowseObjectName.ResetSort(1)
#ENDAT
#!
#!
#AT(%ControlEventHandling, %FuzzyClearButton, 'Accepted'),PRIORITY(6000)
%BrowseObjectName.ResetSort(1)
#ENDAT
#!
#!
#AT(%ControlEventHandling, %TerminateControl, %TerminateEvent),PRIORITY(6000),WHERE(%TerminateOnControlEvent = %True)
POST(EVENT:Accepted, %FuzzyClearButton)
#ENDAT
#!
#!
#AT(%WindowManagerMethodCodeSection, 'Init', '(),BYTE'),PRIORITY(8160)          #!200- ensure correct alpha-numeric sort ordering
%FuzzyEntryField{PROP:Use} = FuzzyQuery%ActiveTemplateInstance
BIND('FuzzyQuery%ActiveTemplateInstance', FuzzyQuery%ActiveTemplateInstance)
%SOVar = %BrowseObjectName.AddSortOrder()
%BrowseObjectName.AppendOrder('200-%(%FuzzyMatchCall())')
  #IF(%MinimumScoreFilterValue)
%BrowseObjectName.SetFilter('%(%FuzzyMatchCall())>=%MinimumScoreFilterValue', 'FuzzyFilter')
  #ENDIF
  #IF(%DisplayResults = %True)
    #CASE(%DisplayWhere)
    #OF('First Column')
%ListControl{PROP:Format} = '%ColumnFormat' & %ListControl{PROP:Format}
    #OF('Last Column')
%ListControl{PROP:Format} = %ListControl{PROP:Format} & '%ColumnFormat'
    #ELSE
      #ASSERT(%False, 'Unknown %%DisplayWhere value!')
    #ENDCASE
  #ENDIF
#ENDAT
#!
#!
#AT(%WindowManagerMethodCodeSection, 'Kill', '(),BYTE'),PRIORITY(7000)
UNBIND('FuzzyQuery%ActiveTemplateInstance')
#ENDAT
#!
#!
#AT(%BrowserMethodDataSection, %ActiveTemplateParentInstance, 'ResetSort', '(BYTE Force),BYTE')
  #CALL(%MakeDeclr, 22, %OOPConstruct, 'FuzzyMatched', 'BYTE(False),STATIC')
%OOPConstruct
#ENDAT
#!
#!
#AT(%BrowserMethodCodeSection, %ActiveTemplateParentInstance, 'ResetSort', '(BYTE Force),BYTE'),PRIORITY(500),DESCRIPTION('Fuzzy match sort order request from ' & %FuzzyGoButton)
IF EVENT() = EVENT:Accepted
  CASE ACCEPTED()
  OF %FuzzyGoButton
    IF FuzzyQuery%ActiveTemplateInstance
      FuzzyMatched = True
      RETURN SELF.SetSort(%SOVar, Force)
    END
  OF %FuzzyClearButton
    FuzzyMatched = False
    CLEAR(FuzzyQuery%ActiveTemplateInstance)
  END
END
IF FuzzyMatched = True THEN RETURN PARENT.ResetSort(Force).
#ENDAT
#!
#!
#AT(%BrowserMethodCodeSection, %ActiveTemplateParentInstance, 'SetQueueRecord', '()'),PRIORITY(2000),WHERE(%DisplayResults = %True)
%ResultVar = %(%FuzzyMatchCall(%False))
#ENDAT
#!
#!
#AT(%BeforeConstructingBrowseQueue, %ActiveTemplateParentInstance),WHERE(%DisplayResults = %True)
  #SET(%ValueConstruct, %ResultVar)
  #INSERT(%CleanDimensions)
  #CASE(%DisplayWhere)
  #OF('First Column')
    #ADD(%QueueField, %ValueConstruct, 1)
  #OF('Last Column')
    #ADD(%QueueField, %ValueConstruct)
  #ELSE
    #ASSERT(%False, 'Unknown %%DisplayWhere value!')
  #ENDCASE
  #SET(%QueueFieldAssignment, %ResultVar)
#ENDAT
#!
#!
#AT(%AfterCalculatingQueueDataType, %ActiveTemplateParentInstance, %ResultVar)
  #SET(%QFieldType, 'LONG')
  #SET(%QueueFieldComment, 'List box control field - Fuzzy matcher result item')
#ENDAT
#!
#!
#AT(%AddFieldsToBrowse, %ActiveTemplateParentInstance),WHERE(%DisplayResults = %True AND %DisplayWhere = 'First Column'),PRIORITY(2000)
%ManagerName.AddField(%QueueFieldAssignment, %ManagerName.Q.%QueueField)
#ENDAT
#!
#!
#AT(%AddFieldsToBrowse, %ActiveTemplateParentInstance),WHERE(%DisplayResults = %True AND %DisplayWhere = 'Last Column'),PRIORITY(7000)
%ManagerName.AddField(%QueueFieldAssignment, %ManagerName.Q.%QueueField)
#ENDAT
#!
#!
#AT(%ResizerMethodCodeSection, %ResizerInstance, 'Init', '(BYTE AppStrategy=AppStrategy:Resize,BYTE SetWindowMinSize=False,BYTE SetWindowMaxSize=False)'),PRIORITY(7100),WHERE(%ResizerInstance <> 0)
SELF.SetStrategy(%FuzzyGroup, %FuzzyGroupRepositionStrategy, %FuzzyGroupResizeStrategy)
#ENDAT
#!
#!
#!
#!
#GROUP(%BuildControlEvents),PRESERVE
  #PURGE(%AvailableControlEvents)
  #IF(%TerminateControl)
    #FIX(%Control, %TerminateControl)
    #FOR(%ControlEvent)
      #ADD(%AvailableControlEvents, %ControlEvent)
    #ENDFOR
  #ENDIF
#!
#!
#GROUP(%DeclrQueueField)
  #CALL(%MakeDeclr, 24, %OOPConstruct, %ResultVar, 'LONG')
  #CALL(%MakeDeclr, 55, %OOPConstruct, %OOPConstruct, '!Fuzzy match result score')
%OOPConstruct
#!
#!
#GROUP(%FuzzyMatchCall, %DoubleQuote = %True),AUTO
#EQUATE(%RVal, 'FuzzyMatch(FuzzyQuery' & %ActiveTemplateInstance & ',')
#EQUATE(%Quotes, CHOOSE(%DoubleQuote = %True, '''''', ''''))
#DECLARE(%p)
#FIX(%Control,%ListControl)
#FOR(%QueueField)
  #FIND(%Field,%QueueFieldAssignment)
  #FIND(%HotField,%QueueFieldAssignment,%HotFields)
  #IF (%Field OR (%HotField AND ~%HotFieldBindOnly) OR INLIST(%QueueFieldAssignment,%ControlField))
    #IF(%p = '')
      #SET(%p, %QueueField)
    #ELSE
      #SET(%p, %p & '&' & %Quotes & ' ' & %Quotes & '&' & %QueueField)
    #ENDIF
  #ENDIF
#ENDFOR
#SET(%RVal, %RVal & %p & ')')
#RETURN(%RVal)
#!
#!
